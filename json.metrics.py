# Βήμα 1: Εισαγωγή των απαιρήτητων βιβλιοθηκών.
import json
import sys 
# Θα ορίσουμε μια συνάρτηση. Τί είναι μια συνάρτηση python; Είναι ένα μπλοκ κώδικα που μπορούμε να το ανακαλούμε όποτε επιθυμούμε, ώστε να αποφεύγονται οι επαναλήψεις κώδικα. Η λέξη def χρησιμοποείται για να οριστεί μια συνάρτηση. Στην συνέχεια ορίζεται το όνομα της συνάρτησης και μετά μέσα σε παρενθέσεις το όρισμα της συνάρτησης, το οποίο και στην περίπτωση μας θα είναι το όνομα του json αρχείου.
# Bήμα 2: ορίζουμε μια συνάρτηση, που θα μετράει τον αριθμό των δειγμάτων σε ένα αρχείο json. Το όνομα είναι count_samples, είναι περιγραφικό για τη λειτουργία της. Το όρισμα είναι json_file και αναμένεται να είναι το μονοπάτι για ένα αρχείο json, για το οποίο και θα εκτελέσει το κώδικα που βρίσκεται μέσα στο μπλοκ της συνάρτησης. Η συνάρτηση τελείωνει εκεί που σταματά να υπάρχει εσοχή.
def sample_count(json_file):
# Βήμα 3: Έλεγχος οτι το αρχείο json όντως υπάρχει και οτι ο κώδικας του μπλοκ μπορεί να εκτελεστεί κανονικά. Θα επιχειρήσουμε να το καταφέρουμε αυτό μέσω της μεθόδου try-except:
    try:
        # Βήμα 4: Ανάγνωση του αρχειου json, μετατροπή του σε λίστα python μέσω του json.load(file) και αποθήκευση της λίστας σε μεταβλητή data.
        with open(json_file, "r", encoding="utf-8") as file: 
            data = json.load(file)
            # Βήμα 5: Καταμέτρηση των αντικειμένων στην λίστα data και ορισμός του αποτελέσματος στη μεταβλητή count_sampe
            sample_count = len(data)
            # Βήμα 6: Εκτύπωση των αποτελεσμάτων της καταμέτρησης των δειγμάτων του json. Αξιοποιείται η μεταβλητή sample_count
            print(f"Ο συνολικός αριθμός των δειγμάτων είναι: {sample_count}")
    # Βήμα 7: Μηχανισμός διαχείρισης σφαλμάτων της python κατά την εκτέλεση του κωδικα.Το except καταγραφεί σφάλματα στον κώδικα που υπάγεται η try. Μπορεί να συνοδεύτει από τους όρους FileNotFoundError, JSONDecodeError. Exception as e: το exception είναι κλάση σφαλμάτων που το αποθηκεύει το σφάλμα που παρατηρεί η python στη μεταβλητή e. Το πρόγραμμα δεν σταματά αν υπάρχει σφάλμα, απλώς το καταγράφει.
    except Exception as e:
        # Βήμα 8: Εκτύπωση μυνήματος σφάλματος. Εκτυπώνεται η μεταβλητή e στην οποία και κατεγράφη το σφάλμα. 
            print(f"Σφάλμα κατά την ανάγνωση του αρχείου: {e}")
# Βήμα 10: Ορίζουμε μια νέα συνάρτηση, def count_samples_with_location(json_file): και καταμετρά πόσα εκ των δειγμάτων φέρουν γεωγραφικές συντεταγμένες. Μετράει πόσα dictionary της λίστας data έχουν συμπληρωμένη τη στήλη location. Το όρισμα της συνάρτησης είναι το json_file, που είναι το όνομα του αρχείου json που δίνει ο χρήστης, ενώ το όνομα περιγράφει τη λειτουργία.
def count_samples_with_location(json_file):
    # Βήμα 11: Η συνάρτηση προσπαθεί να αναγνώσει το αρχείο json και να το μετατρέψει σε αντικείμενο python, τη λίστα data.
      try:
        with open(json_file, "r", encoding="utf-8") as file:
            data = json.load(file)
            # Bήμα 12: Ορισμός μεταβλητής count_with_location και εκτύπωση του αποτελέσματος.
            print(f"Ο αριθμός των δειγμάτων με γεωγραφικές συντεταγμένες είναι: {count_with_location}")


# Βήμα 1?: Λήψη του ονόματος αρχείου από την γραμμή εντολών. Το όνομα που δίνει ο χρήστης ορίζεται ως η μεταβλητή json_file, η οποία και είναι το όρισμα της συνάρτησης που μετράει τον αριθμό των δειγμάτων. Έτσι, ο χρήστης επιλέγει ποιο θα είναι το αρχείο json για το οποίο τα δείγματα θα μετρηθούν.
json_file = sys.argv[1]
# Βήμα 1?: Καλούμε τ συνάρτηση προκειμένου να μετρήσουμε τον αριθμό των δειγμάτων, για τη μεταβλητή json_file.
sample_count(json_file)
count_samples_with_location(json_file)

