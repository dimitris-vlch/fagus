# Βήμα 1: Εισαγωγή βιβλιοθηκών. H sys βιβλιοθήκη χρησιμοποείται για να διαβάσουμε το json και το csv αρχείο στην προκειμένη περίπτωση, καθώς και για να ελένξουμε οτι ο χρήστης
# τα έχει δώσει σωστά. Το sys.argv είναι η λίστα των ορισμάτων που δίνεται από την γραμμή εντολών. Η λίστα έχει τρία ορίσματα, sys.argv[0] που είναι το πρόγραμμα (εννοείται
# δεν το γράφουμε), το δεύτερο όρισμα που θα γινει το αρχείο json sys.argv[1], και το τρίτο που θα γίνει το αρχείο csv sys.argv[2]
import json
import csv
import sys
# Βήμα 2: Έλεγχει με τη len αν η λίστα sys.argv περιέχει περισσότερα/λιγότερα από τρία ορίσματα. Αν ισχύει αυτό, εκτυπώνει οδηγία για σωστή συμπλήρωση
# του συντακτικού του προγράμματος. Στην συνέχεια σταματά το πρόγραμμα.  sys.exit(1)
if len(sys.argv) != 3:
    print("Χρήση: python json_to_csv.py <εισ_αρχείο.json> <εξ_αρχείο.csv>")
    sys.exit(1)
# Βήμα 3: Τα 2ο και 3ο όρισμα του τερματικού ορίζονται ως json_file και csv_file αντίστοιχα.
json_file = sys.argv[1]
csv_file  = sys.argv[2]
# Βήμα 4: Άνοιγμα και ανάγνωση του JSON αρχείου
with open(json_file, "r", encoding="utf-8") as file:
# το json_file έχει πλέον μετατραπεί σε λίστα python, αντικείμενο python που μπορεί να επεξεργαστεί και η λίστα αυτή ορίζεται ως data. 
        data = json.load(file)
# Βήμα 5: Έλεγχος αν υπάρχουν δεδομένα στο JSON. Αν η λίστα data που προέκυψε απο τα δεδομένα του json περιέχει έστω και ένα dictionary, η διεργασία συνεχίζεται φυσιολογικά.
# Αν όχι, το πρόγραμμα σταματά, αφού δώσει την αντίστοιχη ανακοίνωση.
if len(data) == 0:
    print(f"Το  '{json_file}' δεν περιέχει δεδομένα ή έγινε λάθος χρήση. Το '{csv_file}' δεν δημιουργήθηκε. Χρήση: python json_to_csv.py <εισ_αρχείο.json> <εξ_αρχείο.csv>  ")   
    sys.exit(1)
# Βήμα 6: Άνοιγμα του CSV αρχείου για εγγραφή. με το newline αποφεύγονται τα double spaces. 
with open(csv_file, "w", encoding="utf-8", newline="") as file:
# Βήμα 6.1: Ορίζεται η μεταβλητή fieldnames, ως το πρώτο dictionary της λίστας data. Το .keys() εξασφαλίζει οτι θα πάρει τα "country" και όχι τα "France".
    fieldnames = data[0].keys()
# Βήμα 6.2: Ορίζεται το csv.DictWriter ως η μεταβλητή writer, που θα γράψει το file σε λειτουργία εγγραφής, δηλαδή το csv_file στην περίπτωσή μας. Για την εγγραφή,
# το writer χρησιμοποεί την λίστα fieldnames όπως αυτή έχει, δηλαδή fieldnames=fieldnames. 
    writer = csv.DictWriter(file, fieldnames=fieldnames)
# Βήμα 6.3: Με το writerheader συμπληρώνεται η πρώτη γραμμή του csv, με τα δεδομένα fieldnames = data[0].keys() και fieldnames=fieldnames όπως περιγράψαμε παραπάνω.
    writer.writeheader()
# Βήμα 6.4:Εγγραφή των υπόλοιπον γραμμών του csv. Με row διαβάζεται το κάθε dictionary της λίστας data. Και το writer τα γράφει στο csv με βάση τη λίστα data.
# Με το writerow συμπληρώνεται κάθε γραμμή του csv διαδοχικά, έτσι όπως ορίζει η λίστα row. 
    for row in data:
        writer.writerow(row)
# Βήμα 7: Ανακοίνωση ολοκλήρωσης της διεργασίας. Τα json_file και csv_file ορίζονται στην ανακοίνωση έτσι όπως έχουν ονοματιστεί στο τερματικό.
print(f"Η μετατροπή του '{json_file}' σε CSV ολοκληρώθηκε! Το αρχείο '{csv_file}' είναι έτοιμο.")
